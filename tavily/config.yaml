# Plugin Metadata:
# Name: tavily
# Version: 0.1.0
# Description: An agent for searching the web with tavily ai
# Author: Jamieson Walker <jamieson.walker@solace.com>
# 
# --- Start of Agent Configuration Template ---
# Solace Agent Mesh: Plugin Configuration Template
#
# This file serves as a template for creating new agent configurations from this plugin.
# Use placeholders like __COMPONENT_KEBAB_CASE_NAME__, __COMPONENT_PASCAL_CASE_NAME__,
# and __COMPONENT_UPPER_SNAKE_CASE_NAME__ where the specific component name should be inserted.

log:
  stdout_log_level: INFO
  log_file_level: DEBUG
  log_file: __COMPONENT_KEBAB_CASE_NAME__.log

# To use the `shared_config.yaml` file, uncomment the following line and remove the `shared_config` section below.
# !include ../shared_config.yaml
shared_config:
  - broker_connection: &broker_connection
      dev_mode: ${SOLACE_DEV_MODE, false}
      broker_url: ${SOLACE_BROKER_URL, ws://localhost:8080}
      broker_username: ${SOLACE_BROKER_USERNAME, default}
      broker_password: ${SOLACE_BROKER_PASSWORD, default}
      broker_vpn: ${SOLACE_BROKER_VPN, default}
      temporary_queue: ${USE_TEMPORARY_QUEUES, true}

  - models:
    general: &general_model
      # This dictionary structure tells ADK to use the LiteLlm wrapper.
      # 'model' uses the specific model identifier your endpoint expects.
      model: ${LLM_SERVICE_GENERAL_MODEL_NAME} # Use env var for model name
      # 'api_base' tells LiteLLM where to send the request.
      api_base: ${LLM_SERVICE_ENDPOINT} # Use env var for endpoint URL
      # 'api_key' provides authentication.
      api_key: ${LLM_SERVICE_API_KEY} # Use env var for API key

  - services:
    # Default session service configuration
    session_service: &default_session_service
      type: "memory"
      default_behavior: "PERSISTENT"
    
    # Default artifact service configuration
    artifact_service: &default_artifact_service
      type: "filesystem"
      base_path: "/tmp/samv2"
      artifact_scope: namespace # Or "namespace", "app", "custom"

apps:
  - name: "Tavily__app"
    app_base_path: .
    app_module: solace_agent_mesh.agent.sac.app
    broker:
      <<: *broker_connection

    app_config:
      namespace: "${NAMESPACE}"
      supports_streaming: false
      agent_name: "Tavily"
      display_name: "Tavily Agent"
      model: *general_model 

      instruction: |
        You are a helpful AI assistant for searching the web named TavilyAgent
      
      tools:
        - tool_type: mcp
          # connection_params:
            # type: sse
            # url: "https://mcp.tavily.com/mcp/?tavilyApiKey=${TAVILY_TOKEN}"
          connection_params:
            type: stdio
            command: "npx"
            args:
              - "-y"
              - "mcp-remote"
              - "https://mcp.tavily.com/mcp/?tavilyApiKey=${TAVILY_TOKEN}"

      session_service: *default_session_service
      artifact_service: *default_artifact_service
      

      # Agent Card Definition
      agent_card:
        description: |
          A helpful AI assistant for searching the web
        defaultInputModes: [text] 
        defaultOutputModes: [text, file] 
        skills: []
      
      # Discovery & Communication
      agent_card_publishing: 
        interval_seconds: 10
      agent_discovery: 
        enabled: true
      inter_agent_communication:
        allow_list: ["*"] 
        deny_list: [] 
        request_timeout_seconds: 600